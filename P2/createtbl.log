(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 11.5.9.0

You can issue database manager commands and SQL statements from the command 
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside 
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => db2 => db2 => db2 => db2 => CONNECT TO COMP421

   Database Connection Information

 Database server        = DB2/LINUXX8664 11.5.9.0
 SQL authorization ID   = CS421G10...
 Local database alias   = COMP421


db2 => db2 => db2 => db2 => db2 => db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Employee ( eid INTEGER PRIMARY KEY NOT NULL, fName VARCHAR(20), lName VARCHAR(30), shift VARCHAR(10), wage DECIMAL CHECK(wage > 13.0) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Chef ( eid INTEGER PRIMARY KEY NOT NULL, FOREIGN KEY (eid) REFERENCES Employee, rank INTEGER )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Manager ( eid INTEGER PRIMARY KEY NOT NULL, FOREIGN KEY (eid) REFERENCES Employee )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Waiter ( eid INTEGER PRIMARY KEY NOT NULL, FOREIGN KEY (eid) REFERENCES Employee )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Host ( eid INTEGER PRIMARY KEY NOT NULL, FOREIGN KEY (eid) REFERENCES Employee )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Ingredient ( name VARCHAR(20) PRIMARY KEY NOT NULL, stock DECIMAL CHECK(stock >= 0.0) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE MenuItem ( name VARCHAR(50) PRIMARY KEY NOT NULL, description VARCHAR(100), price DECIMAL )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Supplier ( supplierId INT PRIMARY KEY NOT NULL, name VARCHAR(50), email VARCHAR(50), phone VARCHAR(10) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Table ( tableNumber INTEGER PRIMARY KEY NOT NULL, size INTEGER )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Bill ( billId INTEGER PRIMARY KEY NOT NULL, date DATE, time TIME, amtPaid DECIMAL )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Reservation ( resId INTEGER PRIMARY KEY NOT NULL, fName VARCHAR(30), lName VARCHAR(30), date DATE, time TIME, size INTEGER, hostId INTEGER, FOREIGN KEY (hostId) REFERENCES Host )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Seats ( tableNumber INTEGER PRIMARY KEY NOT NULL, hostId INTEGER, time TIME, FOREIGN KEY (tableNumber) REFERENCES Table, FOREIGN KEY (hostId) REFERENCES Host )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE ServesCheque ( tableNumber INTEGER NOT NULL, billId INTEGER NOT NULL, time TIME NOT NULL, PRIMARY KEY (tableNumber, billId), FOREIGN KEY (tableNumber) REFERENCES Table, FOREIGN KEY (billId) REFERENCES Bill, waiterId INTEGER, FOREIGN KEY (waiterId) REFERENCES Waiter )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Assignment ( tableNumber INTEGER NOT NULL, resId INTEGER NOT NULL, PRIMARY KEY (tableNumber, resId), FOREIGN KEY (tableNumber) REFERENCES Table, FOREIGN KEY (resId) REFERENCES Reservation )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Attends ( waiterId INTEGER NOT NULL, tableNumber INTEGER NOT NULL, PRIMARY KEY (waiterId, tableNumber), FOREIGN KEY (waiterId) REFERENCES Waiter, FOREIGN KEY (tableNumber) REFERENCES Table )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Contains ( itemName VARCHAR(30) NOT NULL, billId INTEGER NOT NULL, PRIMARY KEY (itemname, billId), FOREIGN KEY (itemName) REFERENCES MenuItem, FOREIGN KEY (billId) REFERENCES Bill )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Modifies ( chefId INTEGER NOT NULL, managerId INTEGER NOT NULL, itemName VARCHAR(30) NOT NULL, PRIMARY KEY (chefId, managerId, itemName), FOREIGN KEY (chefId) REFERENCES Chef, FOREIGN KEY (managerId) REFERENCES Manager, FOREIGN KEY (itemName) REFERENCES MenuItem )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE MakesUp ( ingredientName VARCHAR(20) NOT NULL, itemName VARCHAR(30) NOT NULL, PRIMARY KEY (ingredientName, itemname), FOREIGN KEY (ingredientName) REFERENCES Ingredient, FOREIGN KEY (itemName) REFERENCES MenuItem )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Orders ( managerId INTEGER NOT NULL, ingredientname VARCHAR(20) NOT NULL, supplierId INTEGER NOT NULL, PRIMARY KEY (managerId, ingredientName, supplierId), FOREIGN KEY (managerId) REFERENCES Manager, FOREIGN KEY (ingredientName) REFERENCES Ingredient, FOREIGN KEY (supplierId) REFERENCES Supplier, quantity DECIMAL, date DATE )
DB20000I  The SQL command completed successfully.

db2 => db2 => 